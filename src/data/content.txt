||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
|||||||||||||||||||||||||||||||| DESIGN SYSTEMS ||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||

|||||||||||||||||||||||||||||||| O que é isso? |||||||||||||||||||||||||||||||||

- Design systems são ecossistemas de bibliotecas intaláveis, com componentes
programados, padrões semânticos de design, e que reune padrões de comportamento.

- Geralmente contém coleções de documentos, artigos, exemplos, trechos de 
códigos, prints, instruções de design, e vários outros conteúdos digitais, além 
de apenas componentes.

- É importante saber que DS não é um projeto, é um produto que será utilizado 
por outros produtos.

|||||||||||||||||||||||||||||||| Pra que isso? |||||||||||||||||||||||||||||||||

- Falando de produtos digitais (um app ou um site), é comum encontrar problemas 
na projeção no controle de novas funcionalidades.

- Idéias novas sempre surgem em novos produtos, como por exemplo paletas de 
cores, tipografia, iconografia e padrões de componentes… o que geralmente pode 
ser influenciado por diferentes profissionais, inovações em projetos, entre 
outros.

- O resultado diso é muita inconsistência visual e de interação, e 
consequentemente, o aummento do custo de manutenção do que já foi desenvolvido.

- É importante estabelecer processos e desenvolver ferramentas que auxiliem na 
criação de novos produtos, levando em consideração a consistência, padronização 
e identidade da marca.

- Um DS é criado então como um produto vivo, com padões visuais e de código, que 
melhora essa consistência de todos os produtos.

- É disponibilizado para toda a equipe (do design ao desenvolvimento) para que, 
além de tudo, possa garantir uniformidade na experiência final do usuário.

||||||||||||||||||||||||||||||| Exemplificando |||||||||||||||||||||||||||||||||

- Pensar em DS, é como pensar em LEGOs. Imagine um projeto novo como algo a ser
criado com peças de LEGO.

- Nosso sistema de design seria um conjunto de pecinhas padronizadas, que seguem 
a mesma consistência de design.

- Cada pecinha representaria um componente.

- Cada pecinha já está predefinida.

- Precisamos apenas selecionar as que precisamos, e montá-las dentro de um padrão.

- Nossas pecinhas (componentes) podem se relacionar, se juntando e criando então
novos componentes.

||||||||||||||||||||||| Style guide x Pattern library ||||||||||||||||||||||||||

- O design system é um apanhado de informações de várias áreas do design.

- É um conjunto completo de padrões do projeto, documentação e princípios, 
juntamente com um kit de ferramentas de design e código.

- Style guides e pattern libraries são como seções desse conjunto.

- Pattern library representa um repositório de componentes de UI Design, e um 
style guide representa uma diretriz sobre a parte visual da interface.

||||||||||||||||||||||||||||||| Atomic design ||||||||||||||||||||||||||||||||||

- O Atomic design é uma metodologia criada por Brad Frost em 2013, que apresenta 
um paralelo entre a química e componentização de elementos de interface.

- Essa forma de lidar com os elementos do design resulta em uma metodologia 
estruturada, racional e lógica de dar função e forma ao projetos, com base 
conceitual e de forma relativamente simples de entender.

- É uma metodologia eficiente para a criação de um Design System, uma vez que a 
equipe terá clareza sobre cada etapa da sua construção. 

- Na metodologia do atomic design, lidamos com os componentes de forma crescente, 
saindo do menor para o maior

- Átomos: aqui podemos incluir ícones, botões, cores, imagens, tipografia etc.

- Moléculas: aqui seria o resultado da interação dos itens pertencentes a 
categoria átomos. Então poderíamos citar como exemplo uma sidebar, um card, uma 
barra de menu.

- Organismos: aqui se enquadra os resultados da interação das moléculas, como 
exemplo podemos citar um header de um site, que contém um menu e outros ícones.

-Templates: aqui seria o resultado da interação de todos os componentes citados 
anteriormente, montando um produto modelo que pode ser utilizado por qualquer 
pessoa, sofrendo alguns ajustes.

- Páginas: já essa etapa seria mais próximo do produto pronto final, sendo o mais 
completo do que um template

||||||||||||||||||||||||||| Os elementos que compõem |||||||||||||||||||||||||||

- Objetivos e valores: Antes de pensar em grid, tipografia e cores, é preciso 
pensar nos objetivos e valores da empresa. Esses fundamentos guiarão todas as 
escolhas feitas, evitando projetos sem coesão com os princípios da instituição.

- Guia de Estilo: É pensada a identidade visual, seguindo os objetivos e valores. 
Um guia de estilo é fundamental para definir os princípios de design, identidade 
da marca, cores, tipografia...

- Biblioteca de componentes e padrões: Após definido a identidade visual, é hora 
de construir os elementos que serão utilizados no desenvolvimento de um produto. 
Na criação dessa biblioteca, entram desenvolvedores e UI Designers. 

- Códigos: Se adequado aos projetos, design systems podem incluir padrões de 
códigos, como nome de classes, ids, indentação, formatação e organização. Um 
projeto de um sistema de vai lidar com a integração entre design e a parte de 
desenvolvimento front-end, por isso é importante que funcione como o esperado.

- Documentação: A documentação é o que vai diferenciar o Design System de um 
simples repositório ou Pattern Library. As documentações devem conter todas as 
regras do que fazer e do que não fazer e devem ser de fácil entendimento, para 
garantir que todos os estilos e interações estejam alinhados. É importante lembrar
que o produto pode (e deve) sofrer constantes mudanças e atualizações, sem perder 
sua consistência.

||||||||||||||||||||||||||||||||| Como começar |||||||||||||||||||||||||||||||||

- Product principles: Qual é o propósito e a alma por trás de todos os produtos?

- Written content: Como deve ser a aparência e comportamento da interface do 
produto?

- Visual properties: Como deve ser a “aparência” do produto?

- Components: Quais são os padrões da interface do usuário e os componentes de 
código necessários para criar produtos de maneira coerente em todos os 
dispositivos?

||||||||||||||||||||||||||||||||| Guia rápido |||||||||||||||||||||||||||||||||

- Discovery: Conhecer a marca e quais são os valores que estão envolvidos e as 
pessoas que fazem parte dentro dessa organização. É bom olhar os projetos e 
produtos existentes, e como eles vão ser afetados nessa criação inicial do 
design system.

- Design: Depois de absorver e ouvir designers, stakeholders e usuários, reunir 
os dados para construção dos pilares (princípios) do seu design system. 

- Desenvolvimento: Alinhar as expectativas com os desenvolvedores, que irão 
materializar esses componentes, codificando e definindo questões técnicas para seu 
compartilhamento. 

- Documentação: O Design System é único para toda a empresa. Criar uma 
documentação acessível e alocar a ferramenta em um local acessível para todos.

||||||||||||||||||||||||||||| Considerações Finais |||||||||||||||||||||||||||||

- A ideia é que o Design System seja um documento que garanta uma melhor 
consistência nos produtos, e que dialogue com todas as áreas envolvidas e não 
somente a parte visual.

- É uma ferramenta viva que evolui conforme o desenvolvimento e amadurecimento 
dos projetos de UX Design de uma empresa.

- O resultado tem diversos benefícios, tais como dinamicidade, fácil atualização, 
redução de custos e de tempo de trabalho, otimização de tarefas e da força de 
trabalho, interfaces coerentes e consistentes, entre outros.

|||||||||||||||||||||||||||||||||||| Links |||||||||||||||||||||||||||||||||||||

https://airbnb.design/building-a-visual-language/
https://designerup.co/blog/10-best-design-systems-and-how-to-learn-and-steal-from-them/
https://github.com/alexpate/awesome-design-systems
https://medium.com/aela/design-system-como-funciona-e-porque-us%C3%A1-lo-edc31029f337
